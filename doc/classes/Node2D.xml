<?xml version="1.0" encoding="UTF-8" ?>
<class name="Node2D" inherits="CanvasItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Base object in 2D space, inherited by all 2D nodes.
	</brief_description>
	<description>
		A 2D game object, with a transform (position, rotation, and scale). All 2D nodes, including physics objects and sprites, inherit from Node2D. Use Node2D as a parent node to move, scale and rotate children in a 2D project. Also gives control of the node's render order.
		[b]Note:[/b] Since both [Node2D] and [Control] inherit from [CanvasItem], they share several concepts from the class such as the [member CanvasItem.z_index] and [member CanvasItem.visible] properties.
	</description>
	<tutorials>
		<link title="Custom drawing in 2D">$DOCS_URL/tutorials/2d/custom_drawing_in_2d.html</link>
		<link title="All 2D Demos">https://github.com/godotengine/godot-demo-projects/tree/master/2d</link>
	</tutorials>
	<methods>
		<method name="apply_scale">
			<return type="void" />
			<param index="0" name="ratio" type="Vector2" />
			<description>
				Multiplies the current scale by the [param ratio] vector.
			</description>
		</method>
		<method name="get_angle_to" qualifiers="const">
			<return type="float" />
			<param index="0" name="point" type="Vector2" />
			<description>
				Returns the angle between the node and the global [param point] in radians.
				[url=https://raw.githubusercontent.com/godotengine/godot-docs/master/img/node2d_get_angle_to.png]Illustration of the returned angle.[/url]
			</description>
		</method>
		<method name="get_relative_transform_to_parent" qualifiers="const">
			<return type="Transform2D" />
			<param index="0" name="parent" type="Node" />
			<description>
				Returns the [Transform2D] relative to this node's parent.
			</description>
		</method>
		<method name="global_translate">
			<return type="void" />
			<param index="0" name="offset" type="Vector2" />
			<description>
				Adds the [param offset] vector to the node's [member global_position].
			</description>
		</method>
		<method name="look_at">
			<return type="void" />
			<param index="0" name="point" type="Vector2" />
			<description>
				Rotates the node so that its local right axis (+X, [constant Vector2.RIGHT]) points toward the [param point], in global space.
				[b]Note:[/b] If [param point] is the same as the node's [member global_position], the node will always look to the right.
			</description>
		</method>
		<method name="move_local_x">
			<return type="void" />
			<param index="0" name="delta" type="float" />
			<param index="1" name="scaled" type="bool" default="false" />
			<description>
				Applies a local translation on the node's X axis based on the [method Node._process]'s [param delta]. If [param scaled] is [code]false[/code], normalizes the movement.
			</description>
		</method>
		<method name="move_local_y">
			<return type="void" />
			<param index="0" name="delta" type="float" />
			<param index="1" name="scaled" type="bool" default="false" />
			<description>
				Applies a local translation on the node's Y axis based on the [method Node._process]'s [param delta]. If [param scaled] is [code]false[/code], normalizes the movement.
			</description>
		</method>
		<method name="rotate">
			<return type="void" />
			<param index="0" name="radians" type="float" />
			<description>
				Rotates this node by the given angle [param radians], in radians. This operation is calculated in parent space (relative to the parent).
			</description>
		</method>
		<method name="to_global" qualifiers="const">
			<return type="Vector2" />
			<param index="0" name="local_point" type="Vector2" />
			<description>
				<!-- Transforms the provided local position into a position in global coordinate space. The input is expected to be local relative to the [Node2D] it is called on. e.g. Applying this method to the positions of child nodes will correctly transform their positions into the global coordinate space, but applying it to a node's own position will give an incorrect result, as it will incorporate the node's own transformation into its global position. -->
				Returns the [param local_point] converted from this node's local space to global space. This is the opposite of [method to_local].
			</description>
		</method>
		<method name="to_local" qualifiers="const">
			<return type="Vector2" />
			<param index="0" name="global_point" type="Vector2" />
			<description>
				<!-- Transforms the provided global position into a position in local coordinate space. The output will be local relative to the [Node2D] it is called on. e.g. It is appropriate for determining the positions of child nodes, but it is not appropriate for determining its own position relative to its parent. -->
				Returns the [param global_point] converted from global space to this node's local space. This is the opposite of [method to_global].
			</description>
		</method>
		<method name="translate">
			<return type="void" />
			<param index="0" name="offset" type="Vector2" />
			<description>
				Translates the node by the given [param offset] in local coordinates.
			</description>
		</method>
	</methods>
	<members>
		<member name="global_position" type="Vector2" setter="set_global_position" getter="get_global_position">
			Global position (translation) of this node in global space (relative to the world). This is equivalent to the [member global_transform]'s [member Transform2D.origin]. See also [member position].
		</member>
		<member name="global_rotation" type="float" setter="set_global_rotation" getter="get_global_rotation">
			Global rotation of this node in radians, in global space (relative to the world). See also [member global_position].
		</member>
		<member name="global_rotation_degrees" type="float" setter="set_global_rotation_degrees" getter="get_global_rotation_degrees">
			The [member global_rotation] of this node, in degrees instead of radians. See also [member rotation_degrees].
		</member>
		<member name="global_scale" type="Vector2" setter="set_global_scale" getter="get_global_scale">
			Global scale of this node in global space (relative to the world).
			[b]Note:[/b] The behavior of some 2D node types is not affected by this property. These include [Camera2D], [AudioStreamPlayer2D], and more.
		</member>
		<member name="global_skew" type="float" setter="set_global_skew" getter="get_global_skew">
			Global skew applied to this node in the X axis, in radians and in global space (relative to the world). Higher values distort the node more.
		</member>
		<member name="global_transform" type="Transform2D" setter="set_global_transform" getter="get_global_transform">
			Global transformation of this node in global space (relative to the world). Contains and represents this node's [member global_position], [member global_rotation], [member global_scale], and [member global_skew].
		</member>
		<member name="position" type="Vector2" setter="set_position" getter="get_position" default="Vector2(0, 0)">
			Local position (translation) of this node in local space (relative to the parent node). This is equivalent to the [member transform]'s [member Transform2D.origin]. See also [member global_position].
		</member>
		<member name="rotation" type="float" setter="set_rotation" getter="get_rotation" default="0.0">
			Local rotation of this node in radians, in local space (relative to the parent node). See also [member global_rotation].
			[b]Note:[/b] This property is edited in degrees in the inspector. If you want to use degrees in a script, use [member rotation_degrees].
		</member>
		<member name="rotation_degrees" type="float" setter="set_rotation_degrees" getter="get_rotation_degrees">
			The [member rotation] of this node, in degrees instead of radians. See also [member global_rotation_degrees].
			[b]Note:[/b] This is [b]not[/b] the property available in the Inspector dock.
		</member>
		<member name="scale" type="Vector2" setter="set_scale" getter="get_scale" default="Vector2(1, 1)">
			Local scale of this node in local space (relative to the parent node). See also [member global_scale].
			[b]Note:[/b] The behavior of some 2D node types is not affected by this property. These include [Camera2D], [AudioStreamPlayer2D], etc.
			[b]Warning:[/b] Mixed negative scales in 2D are not decomposable from the transformation matrix. Due to the way scale is represented with transformation matrices in Godot, the scale values will either be all positive or all negative.
		</member>
		<member name="skew" type="float" setter="set_skew" getter="get_skew" default="0.0">
			Local skew applied to this node in the X axis, in radians and in local space (relative to the parent node). Higher values distort the node more. See also [member global_skew].
			[b]Note:[/b] This property is edited in degrees in the inspector. If you want to use degrees in a script, convert this property's value with [method @GlobalScope.rad_to_deg].
		</member>
		<member name="transform" type="Transform2D" setter="set_transform" getter="get_transform">
			Local transformations of this node in local space (relative to the parent node). Contains and represents this node's [member position], [member rotation], [member scale], and [member skew]. See also [member global_transform].
		</member>
	</members>
</class>
